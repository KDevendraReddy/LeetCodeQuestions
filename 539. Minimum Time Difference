class Solution {
    public int findMinDifference(List<String> timePoints) {
        int n=timePoints.size();
       int mins[]= new int[n];
       for(int i=0;i<n;i++)
       {
            int h = Integer.parseInt(timePoints.get(i).substring(0,2));
            
            int m= Integer.parseInt(timePoints.get(i).substring(3));
            //System.out.println(h+" "+m);
            mins[i]=(h*60)+m;
       } 
       Arrays.sort(mins);
       int ans=Integer.MAX_VALUE;
       for(int i=0;i<n;i++)
       {
            if(i==0)
            {
                if(mins[0]==mins[n-1])
                return 0;
                 int forward = mins[0]-mins[n-1];
                 if(forward<0)
                    forward=Integer.MAX_VALUE;
                int backward = (1440-mins[n-1])+mins[0];
                if(backward<0)
                    backward=Integer.MAX_VALUE;
                if(ans>forward||ans>backward)
                {
                    ans=forward<backward?forward:backward;
                }
            }
            else
            {
                if(mins[i]==mins[i-1])
                return 0;
                    int forward = mins[i]-mins[i-1];
                int backward = (1440-mins[i-1])+mins[i];
                if(ans>forward||ans>backward)
                {
                    ans=forward<backward?forward:backward;
                }
            }
            
       }
       return ans;
    }
}
